Useless nonterminals

   initializer
   primary_expression
   cast_expression
   postfix_expression
   unary_expression
   type_name
   multiplicative_expression
   additive_expression
   shift_expression
   relational_expression
   equality_expression
   bit_or_expression
   bit_xor_expression
   bit_and_expression
   logical_or_expression
   logical_and_expression
   assignment_expression
   expression


Terminals which are not used

   CHARLIT
   STRING
   NUMBER
   INDSEL
   PLUSPLUS
   MINUSMINUS
   SHL
   SHR
   LTEQ
   GTEQ
   EQEQ
   NOTEQ
   LOGAND
   LOGOR
   ELLIPSIS
   TIMESEQ
   DIVEQ
   MODEQ
   PLUSEQ
   MINUSEQ
   SHLEQ
   SHREQ
   ANDEQ
   OREQ
   XOREQ
   AUTO
   BREAK
   CASE
   CHAR
   CONST
   CONTINUE
   DEFAULT
   DO
   DOUBLE
   ELSE
   ENUM
   EXTERN
   FLOAT
   FOR
   GOTO
   IF
   INLINE
   LONG
   REGISTER
   RESTRICT
   RETURN
   SHORT
   SIGNED
   SIZEOF
   STATIC
   STRUCT
   SWITCH
   TYPEDEF
   TYPEDEF_NAME
   UNION
   UNSIGNED
   VOID
   VOLATILE
   WHILE
   _BOOL
   _COMPLEX
   _IMAGINARY
   '_'
   '+'
   '='
   '*'
   '/'
   NEG
   '^'
   '-'
   '!'
   '~'
   '&'
   '%'
   '<'
   '>'
   '|'


Useless rules

   19 initialized_declarator: declarator '=' initializer

   20 initializer: assignment_expression

   21 primary_expression: identifier
   22                   | NUMBER
   23                   | '(' expression ')'

   24 cast_expression: unary_expression
   25                | '(' type_name ')' cast_expression

   26 postfix_expression: primary_expression
   27                   | postfix_expression PLUSPLUS
   28                   | postfix_expression MINUSMINUS

   29 unary_expression: postfix_expression
   30                 | SIZEOF '(' type_name ')'
   31                 | SIZEOF '(' unary_expression ')'
   32                 | '-' cast_expression
   33                 | '+' cast_expression
   34                 | '!' cast_expression
   35                 | '~' cast_expression
   36                 | '&' cast_expression
   37                 | '*' cast_expression
   38                 | PLUSPLUS unary_expression
   39                 | MINUSMINUS unary_expression

   40 type_name: INT

   41 multiplicative_expression: cast_expression
   42                          | multiplicative_expression '*' cast_expression
   43                          | multiplicative_expression '/' cast_expression
   44                          | multiplicative_expression '%' cast_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression '+' multiplicative_expression
   47                    | additive_expression '-' multiplicative_expression

   48 shift_expression: additive_expression
   49                 | shift_expression SHL additive_expression
   50                 | shift_expression SHR additive_expression

   51 relational_expression: shift_expression
   52                      | relational_expression '<' shift_expression
   53                      | relational_expression LTEQ shift_expression
   54                      | relational_expression '>' shift_expression
   55                      | relational_expression GTEQ shift_expression

   56 equality_expression: relational_expression
   57                    | equality_expression EQEQ relational_expression
   58                    | equality_expression NOTEQ relational_expression

   59 bit_or_expression: bit_xor_expression
   60                  | bit_or_expression '|' bit_xor_expression

   61 bit_xor_expression: bit_and_expression
   62                   | bit_xor_expression '^' bit_and_expression

   63 bit_and_expression: equality_expression
   64                   | bit_and_expression '&' equality_expression

   65 logical_or_expression: logical_and_expression
   66                      | logical_or_expression LOGOR logical_and_expression

   67 logical_and_expression: bit_or_expression
   68                       | logical_and_expression LOGAND bit_or_expression

   69 assignment_expression: unary_expression '=' assignment_expression
   70                      | unary_expression PLUSEQ assignment_expression
   71                      | unary_expression MINUSEQ assignment_expression
   72                      | unary_expression TIMESEQ assignment_expression
   73                      | unary_expression DIVEQ assignment_expression
   74                      | unary_expression MODEQ assignment_expression
   75                      | unary_expression SHLEQ assignment_expression
   76                      | unary_expression SHREQ assignment_expression
   77                      | unary_expression ANDEQ assignment_expression
   78                      | unary_expression OREQ assignment_expression
   79                      | unary_expression XOREQ assignment_expression

   80 expression: assignment_expression
   81           | expression ',' assignment_expression


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: declaration
    2                 | translation_unit declaration

    3 declaration: declaration_specifier initialized_declarator_list ';'

    4 initialized_declarator_list: initialized_declarator
    5                            | initialized_declarator_list ',' initialized_declarator

    6 initialized_declarator: declarator

    7 declaration_specifier: type_specifier
    8                      | type_specifier declaration_specifier

    9 type_specifier: INT

   10 declarator: direct_declarator

   11 direct_declarator: simple_declarator
   12                  | '(' declarator ')'
   13                  | function_declarator
   14                  | array_declarator

   15 function_declarator: direct_declarator '(' ')'

   16 array_declarator: direct_declarator '[' ']'

   17 simple_declarator: identifier

   18 identifier: IDENT


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37)
'&' (38)
'(' (40) 12 15
')' (41) 12 15
'*' (42)
'+' (43)
',' (44) 5
'-' (45)
'/' (47)
';' (59) 3
'<' (60)
'=' (61)
'>' (62)
'[' (91) 16
']' (93) 16
'^' (94)
'_' (95)
'|' (124)
'~' (126)
error (256)
CHARLIT (258)
STRING (259)
IDENT (260) 18
NUMBER (261)
INDSEL (262)
PLUSPLUS (263)
MINUSMINUS (264)
SHL (265)
SHR (266)
LTEQ (267)
GTEQ (268)
EQEQ (269)
NOTEQ (270)
LOGAND (271)
LOGOR (272)
ELLIPSIS (273)
TIMESEQ (274)
DIVEQ (275)
MODEQ (276)
PLUSEQ (277)
MINUSEQ (278)
SHLEQ (279)
SHREQ (280)
ANDEQ (281)
OREQ (282)
XOREQ (283)
AUTO (284)
BREAK (285)
CASE (286)
CHAR (287)
CONST (288)
CONTINUE (289)
DEFAULT (290)
DO (291)
DOUBLE (292)
ELSE (293)
ENUM (294)
EXTERN (295)
FLOAT (296)
FOR (297)
GOTO (298)
IF (299)
INLINE (300)
INT (301) 9
LONG (302)
REGISTER (303)
RESTRICT (304)
RETURN (305)
SHORT (306)
SIGNED (307)
SIZEOF (308)
STATIC (309)
STRUCT (310)
SWITCH (311)
TYPEDEF (312)
TYPEDEF_NAME (313)
UNION (314)
UNSIGNED (315)
VOID (316)
VOLATILE (317)
WHILE (318)
_BOOL (319)
_COMPLEX (320)
_IMAGINARY (321)
NEG (322)


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
translation_unit (89)
    on left: 1 2, on right: 0 2
declaration (90)
    on left: 3, on right: 1 2
initialized_declarator_list (91)
    on left: 4 5, on right: 3 5
initialized_declarator (92)
    on left: 6, on right: 4 5
declaration_specifier (93)
    on left: 7 8, on right: 3 8
type_specifier (94)
    on left: 9, on right: 7 8
declarator (95)
    on left: 10, on right: 6 12
direct_declarator (96)
    on left: 11 12 13 14, on right: 10 15 16
function_declarator (97)
    on left: 15, on right: 13
array_declarator (98)
    on left: 16, on right: 14
simple_declarator (99)
    on left: 17, on right: 11
identifier (100)
    on left: 18, on right: 17


state 0

    0 $accept: . translation_unit $end

    INT  shift, and go to state 1

    translation_unit       go to state 2
    declaration            go to state 3
    declaration_specifier  go to state 4
    type_specifier         go to state 5


state 1

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


state 2

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . declaration

    $end  shift, and go to state 6
    INT   shift, and go to state 1

    declaration            go to state 7
    declaration_specifier  go to state 4
    type_specifier         go to state 5


state 3

    1 translation_unit: declaration .

    $default  reduce using rule 1 (translation_unit)


state 4

    3 declaration: declaration_specifier . initialized_declarator_list ';'

    IDENT  shift, and go to state 8
    '('    shift, and go to state 9

    initialized_declarator_list  go to state 10
    initialized_declarator       go to state 11
    declarator                   go to state 12
    direct_declarator            go to state 13
    function_declarator          go to state 14
    array_declarator             go to state 15
    simple_declarator            go to state 16
    identifier                   go to state 17


state 5

    7 declaration_specifier: type_specifier .
    8                      | type_specifier . declaration_specifier

    INT  shift, and go to state 1

    $default  reduce using rule 7 (declaration_specifier)

    declaration_specifier  go to state 18
    type_specifier         go to state 5


state 6

    0 $accept: translation_unit $end .

    $default  accept


state 7

    2 translation_unit: translation_unit declaration .

    $default  reduce using rule 2 (translation_unit)


state 8

   18 identifier: IDENT .

    $default  reduce using rule 18 (identifier)


state 9

   12 direct_declarator: '(' . declarator ')'

    IDENT  shift, and go to state 8
    '('    shift, and go to state 9

    declarator           go to state 19
    direct_declarator    go to state 13
    function_declarator  go to state 14
    array_declarator     go to state 15
    simple_declarator    go to state 16
    identifier           go to state 17


state 10

    3 declaration: declaration_specifier initialized_declarator_list . ';'
    5 initialized_declarator_list: initialized_declarator_list . ',' initialized_declarator

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


state 11

    4 initialized_declarator_list: initialized_declarator .

    $default  reduce using rule 4 (initialized_declarator_list)


state 12

    6 initialized_declarator: declarator .

    $default  reduce using rule 6 (initialized_declarator)


state 13

   10 declarator: direct_declarator .
   15 function_declarator: direct_declarator . '(' ')'
   16 array_declarator: direct_declarator . '[' ']'

    '('  shift, and go to state 22
    '['  shift, and go to state 23

    $default  reduce using rule 10 (declarator)


state 14

   13 direct_declarator: function_declarator .

    $default  reduce using rule 13 (direct_declarator)


state 15

   14 direct_declarator: array_declarator .

    $default  reduce using rule 14 (direct_declarator)


state 16

   11 direct_declarator: simple_declarator .

    $default  reduce using rule 11 (direct_declarator)


state 17

   17 simple_declarator: identifier .

    $default  reduce using rule 17 (simple_declarator)


state 18

    8 declaration_specifier: type_specifier declaration_specifier .

    $default  reduce using rule 8 (declaration_specifier)


state 19

   12 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 24


state 20

    3 declaration: declaration_specifier initialized_declarator_list ';' .

    $default  reduce using rule 3 (declaration)


state 21

    5 initialized_declarator_list: initialized_declarator_list ',' . initialized_declarator

    IDENT  shift, and go to state 8
    '('    shift, and go to state 9

    initialized_declarator  go to state 25
    declarator              go to state 12
    direct_declarator       go to state 13
    function_declarator     go to state 14
    array_declarator        go to state 15
    simple_declarator       go to state 16
    identifier              go to state 17


state 22

   15 function_declarator: direct_declarator '(' . ')'

    ')'  shift, and go to state 26


state 23

   16 array_declarator: direct_declarator '[' . ']'

    ']'  shift, and go to state 27


state 24

   12 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 12 (direct_declarator)


state 25

    5 initialized_declarator_list: initialized_declarator_list ',' initialized_declarator .

    $default  reduce using rule 5 (initialized_declarator_list)


state 26

   15 function_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 15 (function_declarator)


state 27

   16 array_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 16 (array_declarator)
